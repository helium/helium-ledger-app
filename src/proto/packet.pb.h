/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_HELIUM_PACKET_PB_H_INCLUDED
#define PB_HELIUM_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _helium_packet_packet_type { 
    helium_packet_packet_type_longfi = 0, 
    helium_packet_packet_type_lorawan = 1 
} helium_packet_packet_type;

/* Struct definitions */
typedef struct _helium_eui { 
    uint64_t deveui; 
    uint64_t appeui; 
} helium_eui;

typedef struct _helium_window { 
    uint64_t timestamp; 
    float frequency; 
    pb_callback_t datarate; 
} helium_window;

typedef struct _helium_routing_information { 
    pb_size_t which_data;
    union {
        uint32_t devaddr;
        helium_eui eui;
    } data; 
} helium_routing_information;

typedef struct _helium_packet { 
    uint32_t oui; 
    helium_packet_packet_type type; 
    pb_callback_t payload; 
    uint64_t timestamp; 
    float signal_strength; 
    float frequency; 
    pb_callback_t datarate; 
    float snr; 
    bool has_routing;
    helium_routing_information routing; 
    bool has_rx2_window;
    helium_window rx2_window; 
} helium_packet;


/* Helper constants for enums */
#define _helium_packet_packet_type_MIN helium_packet_packet_type_longfi
#define _helium_packet_packet_type_MAX helium_packet_packet_type_lorawan
#define _helium_packet_packet_type_ARRAYSIZE ((helium_packet_packet_type)(helium_packet_packet_type_lorawan+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define helium_eui_init_default                  {0, 0}
#define helium_routing_information_init_default  {0, {0}}
#define helium_window_init_default               {0, 0, {{NULL}, NULL}}
#define helium_packet_init_default               {0, _helium_packet_packet_type_MIN, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, 0, false, helium_routing_information_init_default, false, helium_window_init_default}
#define helium_eui_init_zero                     {0, 0}
#define helium_routing_information_init_zero     {0, {0}}
#define helium_window_init_zero                  {0, 0, {{NULL}, NULL}}
#define helium_packet_init_zero                  {0, _helium_packet_packet_type_MIN, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, 0, false, helium_routing_information_init_zero, false, helium_window_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define helium_eui_deveui_tag                    1
#define helium_eui_appeui_tag                    2
#define helium_window_timestamp_tag              1
#define helium_window_frequency_tag              2
#define helium_window_datarate_tag               3
#define helium_routing_information_devaddr_tag   1
#define helium_routing_information_eui_tag       2
#define helium_packet_oui_tag                    1
#define helium_packet_type_tag                   2
#define helium_packet_payload_tag                3
#define helium_packet_timestamp_tag              4
#define helium_packet_signal_strength_tag        5
#define helium_packet_frequency_tag              6
#define helium_packet_datarate_tag               7
#define helium_packet_snr_tag                    8
#define helium_packet_routing_tag                9
#define helium_packet_rx2_window_tag             10

/* Struct field encoding specification for nanopb */
#define helium_eui_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   deveui,            1) \
X(a, STATIC,   SINGULAR, UINT64,   appeui,            2)
#define helium_eui_CALLBACK NULL
#define helium_eui_DEFAULT NULL

#define helium_routing_information_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (data,devaddr,data.devaddr),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,eui,data.eui),   2)
#define helium_routing_information_CALLBACK NULL
#define helium_routing_information_DEFAULT NULL
#define helium_routing_information_data_eui_MSGTYPE helium_eui

#define helium_window_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         2) \
X(a, CALLBACK, SINGULAR, STRING,   datarate,          3)
#define helium_window_CALLBACK pb_default_field_callback
#define helium_window_DEFAULT NULL

#define helium_packet_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   oui,               1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           3) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         4) \
X(a, STATIC,   SINGULAR, FLOAT,    signal_strength,   5) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         6) \
X(a, CALLBACK, SINGULAR, STRING,   datarate,          7) \
X(a, STATIC,   SINGULAR, FLOAT,    snr,               8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  routing,           9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  rx2_window,       10)
#define helium_packet_CALLBACK pb_default_field_callback
#define helium_packet_DEFAULT NULL
#define helium_packet_routing_MSGTYPE helium_routing_information
#define helium_packet_rx2_window_MSGTYPE helium_window

extern const pb_msgdesc_t helium_eui_msg;
extern const pb_msgdesc_t helium_routing_information_msg;
extern const pb_msgdesc_t helium_window_msg;
extern const pb_msgdesc_t helium_packet_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define helium_eui_fields &helium_eui_msg
#define helium_routing_information_fields &helium_routing_information_msg
#define helium_window_fields &helium_window_msg
#define helium_packet_fields &helium_packet_msg

/* Maximum encoded size of messages (where known) */
/* helium_window_size depends on runtime parameters */
/* helium_packet_size depends on runtime parameters */
#define helium_eui_size                          22
#define helium_routing_information_size          24

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
