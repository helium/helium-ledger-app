/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_BLOCKCHAIN_SNAPSHOT_HANDLER_PB_H_INCLUDED
#define PB_BLOCKCHAIN_SNAPSHOT_HANDLER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _blockchain_snapshot_req { 
    uint64_t height; 
    pb_callback_t hash; 
} blockchain_snapshot_req;

typedef struct _blockchain_snapshot_resp { 
    int64_t next_height; 
    pb_callback_t snapshot; 
} blockchain_snapshot_resp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define blockchain_snapshot_req_init_default     {0, {{NULL}, NULL}}
#define blockchain_snapshot_resp_init_default    {0, {{NULL}, NULL}}
#define blockchain_snapshot_req_init_zero        {0, {{NULL}, NULL}}
#define blockchain_snapshot_resp_init_zero       {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define blockchain_snapshot_req_height_tag       1
#define blockchain_snapshot_req_hash_tag         2
#define blockchain_snapshot_resp_next_height_tag 1
#define blockchain_snapshot_resp_snapshot_tag    2

/* Struct field encoding specification for nanopb */
#define blockchain_snapshot_req_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   height,            1) \
X(a, CALLBACK, SINGULAR, BYTES,    hash,              2)
#define blockchain_snapshot_req_CALLBACK pb_default_field_callback
#define blockchain_snapshot_req_DEFAULT NULL

#define blockchain_snapshot_resp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT64,   next_height,       1) \
X(a, CALLBACK, SINGULAR, BYTES,    snapshot,          2)
#define blockchain_snapshot_resp_CALLBACK pb_default_field_callback
#define blockchain_snapshot_resp_DEFAULT NULL

extern const pb_msgdesc_t blockchain_snapshot_req_msg;
extern const pb_msgdesc_t blockchain_snapshot_resp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define blockchain_snapshot_req_fields &blockchain_snapshot_req_msg
#define blockchain_snapshot_resp_fields &blockchain_snapshot_resp_msg

/* Maximum encoded size of messages (where known) */
/* blockchain_snapshot_req_size depends on runtime parameters */
/* blockchain_snapshot_resp_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
