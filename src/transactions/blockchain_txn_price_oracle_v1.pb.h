/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_HELIUM_BLOCKCHAIN_TXN_PRICE_ORACLE_V1_PB_H_INCLUDED
#define PB_HELIUM_BLOCKCHAIN_TXN_PRICE_ORACLE_V1_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _helium_blockchain_txn_price_oracle_v1 { 
    pb_callback_t public_key; 
    uint64_t price; 
    uint64_t block_height; 
    pb_callback_t signature; 
} helium_blockchain_txn_price_oracle_v1;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define helium_blockchain_txn_price_oracle_v1_init_default {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define helium_blockchain_txn_price_oracle_v1_init_zero {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define helium_blockchain_txn_price_oracle_v1_public_key_tag 1
#define helium_blockchain_txn_price_oracle_v1_price_tag 2
#define helium_blockchain_txn_price_oracle_v1_block_height_tag 3
#define helium_blockchain_txn_price_oracle_v1_signature_tag 4

/* Struct field encoding specification for nanopb */
#define helium_blockchain_txn_price_oracle_v1_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    public_key,        1) \
X(a, STATIC,   SINGULAR, UINT64,   price,             2) \
X(a, STATIC,   SINGULAR, UINT64,   block_height,      3) \
X(a, CALLBACK, SINGULAR, BYTES,    signature,         4)
#define helium_blockchain_txn_price_oracle_v1_CALLBACK pb_default_field_callback
#define helium_blockchain_txn_price_oracle_v1_DEFAULT NULL

extern const pb_msgdesc_t helium_blockchain_txn_price_oracle_v1_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define helium_blockchain_txn_price_oracle_v1_fields &helium_blockchain_txn_price_oracle_v1_msg

/* Maximum encoded size of messages (where known) */
/* helium_blockchain_txn_price_oracle_v1_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
