/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_HELIUM_BLOCKCHAIN_TXN_PB_H_INCLUDED
#define PB_HELIUM_BLOCKCHAIN_TXN_PB_H_INCLUDED
#include <pb.h>
#include "blockchain_txn_coinbase_v1.pb.h"
#include "blockchain_txn_security_coinbase_v1.pb.h"
#include "blockchain_txn_oui_v1.pb.h"
#include "blockchain_txn_gen_gateway_v1.pb.h"
#include "blockchain_txn_routing_v1.pb.h"
#include "blockchain_txn_payment_v1.pb.h"
#include "blockchain_txn_security_exchange_v1.pb.h"
#include "blockchain_txn_consensus_group_v1.pb.h"
#include "blockchain_txn_consensus_group_failure_v1.pb.h"
#include "blockchain_txn_add_gateway_v1.pb.h"
#include "blockchain_txn_assert_location_v1.pb.h"
#include "blockchain_txn_create_htlc_v1.pb.h"
#include "blockchain_txn_redeem_htlc_v1.pb.h"
#include "blockchain_txn_poc_request_v1.pb.h"
#include "blockchain_txn_poc_receipts_v1.pb.h"
#include "blockchain_txn_vars_v1.pb.h"
#include "blockchain_txn_rewards_v1.pb.h"
#include "blockchain_txn_token_burn_v1.pb.h"
#include "blockchain_txn_dc_coinbase_v1.pb.h"
#include "blockchain_txn_token_burn_exchange_rate_v1.pb.h"
#include "blockchain_txn_state_channel_open_v1.pb.h"
#include "blockchain_txn_update_gateway_oui_v1.pb.h"
#include "blockchain_txn_state_channel_close_v1.pb.h"
#include "blockchain_txn_payment_v2.pb.h"
#include "blockchain_txn_price_oracle_v1.pb.h"
#include "blockchain_txn_gen_price_oracle_v1.pb.h"
#include "blockchain_txn_transfer_hotspot_v1.pb.h"
#include "blockchain_txn_rewards_v2.pb.h"
#include "blockchain_txn_gen_validator_v1.pb.h"
#include "blockchain_txn_stake_validator_v1.pb.h"
#include "blockchain_txn_transfer_validator_stake_v1.pb.h"
#include "blockchain_txn_unstake_validator_v1.pb.h"
#include "blockchain_txn_validator_heartbeat_v1.pb.h"
#include "blockchain_txn_assert_location_v2.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _helium_blockchain_txn_bundle_v1 { 
    pb_callback_t transactions; 
} helium_blockchain_txn_bundle_v1;

typedef struct _helium_blockchain_txn { 
    pb_size_t which_txn;
    union {
        helium_blockchain_txn_add_gateway_v1 add_gateway;
        helium_blockchain_txn_assert_location_v1 assert_location;
        helium_blockchain_txn_coinbase_v1 coinbase;
        helium_blockchain_txn_create_htlc_v1 create_htlc;
        helium_blockchain_txn_gen_gateway_v1 gen_gateway;
        helium_blockchain_txn_consensus_group_v1 consensus_group;
        helium_blockchain_txn_oui_v1 oui;
        helium_blockchain_txn_payment_v1 payment;
        helium_blockchain_txn_poc_receipts_v1 poc_receipts;
        helium_blockchain_txn_poc_request_v1 poc_request;
        helium_blockchain_txn_redeem_htlc_v1 redeem_htlc;
        helium_blockchain_txn_security_coinbase_v1 security_coinbase;
        helium_blockchain_txn_routing_v1 routing;
        helium_blockchain_txn_security_exchange_v1 security_exchange;
        helium_blockchain_txn_vars_v1 vars;
        helium_blockchain_txn_rewards_v1 rewards;
        helium_blockchain_txn_token_burn_v1 token_burn;
        helium_blockchain_txn_dc_coinbase_v1 dc_coinbase;
        helium_blockchain_txn_token_burn_exchange_rate_v1 token_burn_exchange_rate;
        helium_blockchain_txn_bundle_v1 bundle;
        helium_blockchain_txn_state_channel_open_v1 state_channel_open;
        helium_blockchain_txn_update_gateway_oui_v1 update_gateway_oui;
        helium_blockchain_txn_state_channel_close_v1 state_channel_close;
        helium_blockchain_txn_payment_v2 payment_v2;
        helium_blockchain_txn_price_oracle_v1 price_oracle_submission;
        helium_blockchain_txn_gen_price_oracle_v1 gen_price_oracle;
        helium_blockchain_txn_transfer_hotspot_v1 transfer_hotspot;
        helium_blockchain_txn_gen_validator_v1 gen_validator;
        helium_blockchain_txn_stake_validator_v1 stake_validator;
        helium_blockchain_txn_transfer_validator_stake_v1 transfer_val_stake;
        helium_blockchain_txn_unstake_validator_v1 unstake_validator;
        helium_blockchain_txn_validator_heartbeat_v1 val_heartbeat;
        helium_blockchain_txn_consensus_group_failure_v1 consensus_group_failure;
        helium_blockchain_txn_rewards_v2 rewards_v2;
        helium_blockchain_txn_assert_location_v2 assert_location_v2;
    } txn; 
} helium_blockchain_txn;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define helium_blockchain_txn_init_default       {0, {helium_blockchain_txn_add_gateway_v1_init_default}}
#define helium_blockchain_txn_bundle_v1_init_default {{{NULL}, NULL}}
#define helium_blockchain_txn_init_zero          {0, {helium_blockchain_txn_add_gateway_v1_init_zero}}
#define helium_blockchain_txn_bundle_v1_init_zero {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define helium_blockchain_txn_bundle_v1_transactions_tag 1
#define helium_blockchain_txn_add_gateway_tag    1
#define helium_blockchain_txn_assert_location_tag 2
#define helium_blockchain_txn_coinbase_tag       3
#define helium_blockchain_txn_create_htlc_tag    4
#define helium_blockchain_txn_gen_gateway_tag    5
#define helium_blockchain_txn_consensus_group_tag 6
#define helium_blockchain_txn_oui_tag            7
#define helium_blockchain_txn_payment_tag        8
#define helium_blockchain_txn_poc_receipts_tag   9
#define helium_blockchain_txn_poc_request_tag    10
#define helium_blockchain_txn_redeem_htlc_tag    11
#define helium_blockchain_txn_security_coinbase_tag 12
#define helium_blockchain_txn_routing_tag        13
#define helium_blockchain_txn_security_exchange_tag 14
#define helium_blockchain_txn_vars_tag           15
#define helium_blockchain_txn_rewards_tag        16
#define helium_blockchain_txn_token_burn_tag     17
#define helium_blockchain_txn_dc_coinbase_tag    18
#define helium_blockchain_txn_token_burn_exchange_rate_tag 19
#define helium_blockchain_txn_bundle_tag         20
#define helium_blockchain_txn_state_channel_open_tag 21
#define helium_blockchain_txn_update_gateway_oui_tag 22
#define helium_blockchain_txn_state_channel_close_tag 23
#define helium_blockchain_txn_payment_v2_tag     24
#define helium_blockchain_txn_price_oracle_submission_tag 25
#define helium_blockchain_txn_gen_price_oracle_tag 26
#define helium_blockchain_txn_transfer_hotspot_tag 27
#define helium_blockchain_txn_gen_validator_tag  28
#define helium_blockchain_txn_stake_validator_tag 29
#define helium_blockchain_txn_transfer_val_stake_tag 30
#define helium_blockchain_txn_unstake_validator_tag 31
#define helium_blockchain_txn_val_heartbeat_tag  32
#define helium_blockchain_txn_consensus_group_failure_tag 33
#define helium_blockchain_txn_rewards_v2_tag     34
#define helium_blockchain_txn_assert_location_v2_tag 35

/* Struct field encoding specification for nanopb */
#define helium_blockchain_txn_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,add_gateway,txn.add_gateway),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,assert_location,txn.assert_location),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,coinbase,txn.coinbase),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,create_htlc,txn.create_htlc),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,gen_gateway,txn.gen_gateway),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,consensus_group,txn.consensus_group),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,oui,txn.oui),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,payment,txn.payment),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,poc_receipts,txn.poc_receipts),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,poc_request,txn.poc_request),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,redeem_htlc,txn.redeem_htlc),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,security_coinbase,txn.security_coinbase),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,routing,txn.routing),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,security_exchange,txn.security_exchange),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,vars,txn.vars),  15) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,rewards,txn.rewards),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,token_burn,txn.token_burn),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,dc_coinbase,txn.dc_coinbase),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,token_burn_exchange_rate,txn.token_burn_exchange_rate),  19) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,bundle,txn.bundle),  20) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,state_channel_open,txn.state_channel_open),  21) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,update_gateway_oui,txn.update_gateway_oui),  22) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,state_channel_close,txn.state_channel_close),  23) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,payment_v2,txn.payment_v2),  24) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,price_oracle_submission,txn.price_oracle_submission),  25) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,gen_price_oracle,txn.gen_price_oracle),  26) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,transfer_hotspot,txn.transfer_hotspot),  27) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,gen_validator,txn.gen_validator),  28) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,stake_validator,txn.stake_validator),  29) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,transfer_val_stake,txn.transfer_val_stake),  30) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,unstake_validator,txn.unstake_validator),  31) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,val_heartbeat,txn.val_heartbeat),  32) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,consensus_group_failure,txn.consensus_group_failure),  33) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,rewards_v2,txn.rewards_v2),  34) \
X(a, STATIC,   ONEOF,    MESSAGE,  (txn,assert_location_v2,txn.assert_location_v2),  35)
#define helium_blockchain_txn_CALLBACK NULL
#define helium_blockchain_txn_DEFAULT NULL
#define helium_blockchain_txn_txn_add_gateway_MSGTYPE helium_blockchain_txn_add_gateway_v1
#define helium_blockchain_txn_txn_assert_location_MSGTYPE helium_blockchain_txn_assert_location_v1
#define helium_blockchain_txn_txn_coinbase_MSGTYPE helium_blockchain_txn_coinbase_v1
#define helium_blockchain_txn_txn_create_htlc_MSGTYPE helium_blockchain_txn_create_htlc_v1
#define helium_blockchain_txn_txn_gen_gateway_MSGTYPE helium_blockchain_txn_gen_gateway_v1
#define helium_blockchain_txn_txn_consensus_group_MSGTYPE helium_blockchain_txn_consensus_group_v1
#define helium_blockchain_txn_txn_oui_MSGTYPE helium_blockchain_txn_oui_v1
#define helium_blockchain_txn_txn_payment_MSGTYPE helium_blockchain_txn_payment_v1
#define helium_blockchain_txn_txn_poc_receipts_MSGTYPE helium_blockchain_txn_poc_receipts_v1
#define helium_blockchain_txn_txn_poc_request_MSGTYPE helium_blockchain_txn_poc_request_v1
#define helium_blockchain_txn_txn_redeem_htlc_MSGTYPE helium_blockchain_txn_redeem_htlc_v1
#define helium_blockchain_txn_txn_security_coinbase_MSGTYPE helium_blockchain_txn_security_coinbase_v1
#define helium_blockchain_txn_txn_routing_MSGTYPE helium_blockchain_txn_routing_v1
#define helium_blockchain_txn_txn_security_exchange_MSGTYPE helium_blockchain_txn_security_exchange_v1
#define helium_blockchain_txn_txn_vars_MSGTYPE helium_blockchain_txn_vars_v1
#define helium_blockchain_txn_txn_rewards_MSGTYPE helium_blockchain_txn_rewards_v1
#define helium_blockchain_txn_txn_token_burn_MSGTYPE helium_blockchain_txn_token_burn_v1
#define helium_blockchain_txn_txn_dc_coinbase_MSGTYPE helium_blockchain_txn_dc_coinbase_v1
#define helium_blockchain_txn_txn_token_burn_exchange_rate_MSGTYPE helium_blockchain_txn_token_burn_exchange_rate_v1
#define helium_blockchain_txn_txn_bundle_MSGTYPE helium_blockchain_txn_bundle_v1
#define helium_blockchain_txn_txn_state_channel_open_MSGTYPE helium_blockchain_txn_state_channel_open_v1
#define helium_blockchain_txn_txn_update_gateway_oui_MSGTYPE helium_blockchain_txn_update_gateway_oui_v1
#define helium_blockchain_txn_txn_state_channel_close_MSGTYPE helium_blockchain_txn_state_channel_close_v1
#define helium_blockchain_txn_txn_payment_v2_MSGTYPE helium_blockchain_txn_payment_v2
#define helium_blockchain_txn_txn_price_oracle_submission_MSGTYPE helium_blockchain_txn_price_oracle_v1
#define helium_blockchain_txn_txn_gen_price_oracle_MSGTYPE helium_blockchain_txn_gen_price_oracle_v1
#define helium_blockchain_txn_txn_transfer_hotspot_MSGTYPE helium_blockchain_txn_transfer_hotspot_v1
#define helium_blockchain_txn_txn_gen_validator_MSGTYPE helium_blockchain_txn_gen_validator_v1
#define helium_blockchain_txn_txn_stake_validator_MSGTYPE helium_blockchain_txn_stake_validator_v1
#define helium_blockchain_txn_txn_transfer_val_stake_MSGTYPE helium_blockchain_txn_transfer_validator_stake_v1
#define helium_blockchain_txn_txn_unstake_validator_MSGTYPE helium_blockchain_txn_unstake_validator_v1
#define helium_blockchain_txn_txn_val_heartbeat_MSGTYPE helium_blockchain_txn_validator_heartbeat_v1
#define helium_blockchain_txn_txn_consensus_group_failure_MSGTYPE helium_blockchain_txn_consensus_group_failure_v1
#define helium_blockchain_txn_txn_rewards_v2_MSGTYPE helium_blockchain_txn_rewards_v2
#define helium_blockchain_txn_txn_assert_location_v2_MSGTYPE helium_blockchain_txn_assert_location_v2

#define helium_blockchain_txn_bundle_v1_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  transactions,      1)
#define helium_blockchain_txn_bundle_v1_CALLBACK pb_default_field_callback
#define helium_blockchain_txn_bundle_v1_DEFAULT NULL
#define helium_blockchain_txn_bundle_v1_transactions_MSGTYPE helium_blockchain_txn

extern const pb_msgdesc_t helium_blockchain_txn_msg;
extern const pb_msgdesc_t helium_blockchain_txn_bundle_v1_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define helium_blockchain_txn_fields &helium_blockchain_txn_msg
#define helium_blockchain_txn_bundle_v1_fields &helium_blockchain_txn_bundle_v1_msg

/* Maximum encoded size of messages (where known) */
/* helium_blockchain_txn_size depends on runtime parameters */
/* helium_blockchain_txn_bundle_v1_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
