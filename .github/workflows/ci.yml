name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build NanoS
        run: |
          make clean
          make DEBUG=1

      - name: Upload nanos app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-nanos
          path: bin

      - name: Build NanoX
        env:
          BOLOS_SDK: /opt/nanox-secure-sdk
        run: |
          make clean
          make DEBUG=1

      - name: Upload nanox app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-nanox
          path: bin

  scan-build:
    name: clang static analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build


  unit-tests:
    name: ctest unit tests
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        working-directory: tests/unit
        run: |
          cmake -Bbuild -H. && make -C build
          CTEST_OUTPUT_ON_FAILURE=1 make -C build test

  integration-test-nanox:
    name: integration-test
    needs: build
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -qy curl build-essential cmake libclang-dev pkg-config libudev-dev libssl-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Download Nano X app binary
        uses: actions/download-artifact@v2
        with:
          name: app-debug-nanox
          path: /bin

      - name: Run NanoX Integration Tests
        working-directory: tests/integration
        run: |
          SPECULOS_DIR=/speculos BUILD_DIR=/ cargo test test::nanox

      - name: Download Nano S app binary
        uses: actions/download-artifact@v2
        with:
          name: app-debug-nanos
          path: /bin

      - name: Run Nanos Integration Tests
        working-directory: tests/integration
        run: |
          SPECULOS_DIR=/speculos BUILD_DIR=/ cargo test test::nanos